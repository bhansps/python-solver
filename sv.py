from z3 import *
a = [BitVec('a{}'.format(i), 32) for i in range(29)]
s = Solver()

for i in range(29):
    s.add(a[i] < 0x7f)
    s.add(a[i] > 0x1f)

s.add(a[5] == 45)
s.add(a[11] == 45)
s.add(a[17] == 45)
s.add(a[23] == 45)
s.add((a[1] - 48) <= 9)
s.add((a[4] - 48) <= 9)
s.add((a[6] - 48) <= 9)
s.add((a[9] - 48) <= 9)
s.add((a[15] - 48) <= 9)
s.add((a[18] - 48) <= 9)
s.add((a[22] - 48) <= 9)
s.add((a[27] - 48) <= 9)
s.add((a[28] - 48) <= 9)
s.add((a[1] - 48) >= 0)
s.add((a[4] - 48) >= 0)
s.add((a[6] - 48) >= 0)
s.add((a[9] - 48) >= 0)
s.add((a[15] - 48) >= 0)
s.add((a[18] - 48) >= 0)
s.add((a[22] - 48) >= 0)
s.add((a[27] - 48) >= 0)
s.add((a[28] - 48) >= 0)
s.add(a[4] - 48 == 2 * (a[1] - 48) + 1)
s.add(a[4] - 48 > 7)
s.add(a[9] == a[4] - (a[1] - 48) + 2)
s.add((a[27] + a[28]) % 13 == 8)
s.add((a[27] + a[22]) % 22 == 18)
s.add((a[18] + a[22]) % 11 == 5)
s.add((a[22] + a[28] + a[18]) % 26 == 4)
s.add((a[1] + a[4] * a[6]) % 41 == 5)
s.add((((((a[15] - a[28]) >> 31) >> 30) + a[15] - a[28]) & 3) - (((a[15] - a[28]) >> 31) >> 30) == 1)
s.add((((((a[22] + a[4]) >> 31) >> 30) + a[22] + a[4]) & 3) - (((a[22] + a[4]) >> 31) >> 30) == 3)
s.add(a[20] == 66)
s.add(a[21] == 66)
s.add((a[6] + a[15] * a[9]) % 10 == 1)
s.add((((((a[15] + a[4] + a[27] - 18) >> 31) >> 28) + a[15] + a[4] + a[27] - 18) & 0xF) - (((a[15] + a[4] + a[27] - 18) >> 31) >> 28) == 8)
s.add(((((a[28] - a[9]) >> 31) + a[28] - a[9]) & 1) - ((a[28] - a[9]) >> 31) == 1)
s.add(a[0] == 77)
s.check()
print s.model()
x = ''
for i in range(29):
    x += chr(s.model()[a[i]].as_long())
print x